services:
  postgres:
    name: "PostgreSQL Database"
    description: "PostgreSQL database for Gitpod Flix"
    commands:
      start: |
        # Install PostgreSQL client if not already installed
        if ! command -v pg_isready &> /dev/null; then
          sudo apt-get update
          sudo apt-get install -y postgresql-client
        fi
        
        # Clean up any existing containers
        docker stop postgres 2>/dev/null || true
        docker rm postgres 2>/dev/null || true
        
        # Start PostgreSQL
        cd database/main
        docker run --rm -d \
          --name postgres \
          -e POSTGRES_USER=gitpod \
          -e POSTGRES_PASSWORD=gitpod \
          -e POSTGRES_DB=gitpodflix \
          -p 5432:5432 \
          -v postgres_data:/var/lib/postgresql/data \
          -v $(pwd)/migrations:/docker-entrypoint-initdb.d \
          postgres:15
        
        # Wait for PostgreSQL to be ready
        echo "Waiting for PostgreSQL to be ready..."
        for i in {1..30}; do
          if pg_isready -h localhost -p 5432 -U gitpod; then
            echo "PostgreSQL is ready"
            break
          fi
          echo "Waiting for PostgreSQL to start... ($i/30)"
          sleep 2
        done
      ready: |
        if ! command -v pg_isready &> /dev/null; then
          echo "pg_isready not found, installing postgresql-client..."
          sudo apt-get update
          sudo apt-get install -y postgresql-client
        fi
        pg_isready -h localhost -p 5432 -U gitpod || exit 1
      stop: |
        docker stop postgres || true
        docker rm postgres || true

  catalog-service:
    name: "Catalog Service"
    description: "Movie catalog API service"
    commands:
      start: |
        cd backend/catalog
        npm install
        PORT=3002 npm run dev
      ready: |
        for i in {1..30}; do
          if curl -s http://localhost:3002/health; then
            exit 0
          fi
          sleep 2
        done
        exit 1
      stop: |
        pkill -f "node.*catalog" || true

  management-ui:
    name: "Management UI"
    description: "Development environment visualization dashboard"
    commands:
      start: |
        cd management-ui
        npm install
        PORT=3001 npm run dev
      ready: |
        for i in {1..30}; do
          if curl -s http://localhost:3001; then
            exit 0
          fi
          sleep 2
        done
        exit 1
      stop: |
        pkill -f "node.*management-ui" || true

  gitpod-flix:
    name: "Gitpod Flix"
    description: "Streaming platform frontend"
    commands:
      start: |
        cd frontend
        npm install
        PORT=3000 npm run dev
      ready: |
        for i in {1..30}; do
          if curl -s http://localhost:3000; then
            exit 0
          fi
          sleep 2
        done
        exit 1
      stop: |
        pkill -f "node.*frontend" || true

tasks:
  installDependencies:
    name: "Install Dependencies"
    description: "Install all project dependencies"
    triggeredBy:
      - postDevcontainerStart
    command: |
      echo "Installing management UI dependencies..."
      cd management-ui && npm install
      echo "Installing Gitpod Flix dependencies..."
      cd ../frontend && npm install
      echo "Installing catalog service dependencies..."
      cd ../backend/catalog && npm install

  seedDatabase:
    name: "Seed Database"
    description: "Seed the database with sample movies"
    triggeredBy:
      - manual
    command: |
      # Install PostgreSQL client if not already installed
      if ! command -v psql &> /dev/null; then
        sudo apt-get update
        sudo apt-get install -y postgresql-client
      fi
      
      cd database/main
      echo "Clearing existing data..."
      PGPASSWORD=gitpod psql -h localhost -U gitpod -d gitpodflix -c "TRUNCATE TABLE movies;"
      echo "Seeding movies..."
      PGPASSWORD=gitpod psql -h localhost -U gitpod -d gitpodflix -f seeds/seed_movies.sql
      echo "Database seeding complete!"

  clearDatabase:
    name: "Clear Database"
    description: "Clear all data from the database"
    triggeredBy:
      - manual
    command: |
      # Install PostgreSQL client if not already installed
      if ! command -v psql &> /dev/null; then
        sudo apt-get update
        sudo apt-get install -y postgresql-client
      fi
      
      cd database/main
      PGPASSWORD=gitpod psql -h localhost -U gitpod -d gitpodflix -c "TRUNCATE TABLE movies;"
